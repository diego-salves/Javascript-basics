JS Notes

# Sempre vou comparar ao Python #

#variáveis e tipos de dados

igual no python


# Estruturas condicionais
if
else if
else

muda apenas o nome

if (condição){
    faz x
} else if (outra condicao) {
    faz y
} else {
    faz z
}

switch case(var qualquer):
    case 'm'
        faz x
    break;
    case 'z':
        faz y
    break;
    default:
        faz z

# Operações matemáticas

só funcionam com data types int ou float, igual no python

# Estruturas de repetição
for 
while

do-while

# operadores lógicos

&& and
|| or
!= not

# Operadores Relacionais

== igual a
!= Diferente de
Maior que <
menor que >
menor que maior ou igual a >=
igual e mesmo tipo ===
diferente e de outro tipo !== 

ps. sempre retornar um boolean

# operadores aritméticos

peculiaridades
console.log(0.1 + 0.7)   0.7999
console.log("42" / 2)    21

# Operador unário e ternário
var sexo = 'm';
console.log(sexo === 'm' ? 'Masculino' : 'Feminino');

#intro a funções

function somar (num1, num2){
    var res = num1 + num2;

    return res;
}

#intervalos e timeout

function escrever(){
    console.log('Geek');
}

setInterval(escrever,1000); //1segundo

informa o nome da função apenas

setTimeout(escrever, 3000);    executa apenas uma vez, mas com um delay

#Escopo de variáveis

var  global
let local
dentro de funções mesmo a var é local

#array

adicinar ao final:

array.push
tamanho: lenght
ordena: .sort() strings

Pra ordenar de números não funciona, método alternativo:

array.sort(function(a,b) {return a-b;});


deletando: delede array[indice]  //undefined

splice deleta vários elementos
array.splice(3,1)  #a partir do elemento 3 delete 1, não fica undefined, forma recomendada

splice pode adicionar elementos

array.splice(3,0,56,89) //a partir do indice 3 não delete nenhum, mas add 56 e 89

pop remove elementos do final do array
remove e retorna o elemento*

var any = array.pop();
console.log(any)

array.shift()
remove e retorna o primeiro elemento de u array

array.unshift add elemento no inicio do array

array.unshift(99)

slice retorna um novo array a partir do índice informado

var novo = array.slice(1, 3)  retorna novo array a partir 1 até indice 3

array.concat(array2)   //concatena 2 arrays

REDUCE = Reduz a um único valor, normalmente usado com o map

HOISTING = Iça a variável caso seja declarada como var 

DESTRUCTURING =  extrai dados dos containers para as variáveis

TRY CATCH = mesmo que no python

CALLBACK = Passa função como parametro para outra função que irá executar esta função mediante um evento(pode ser algo como loop do forEach)

FUNÇÂO CONSTRUTORA = Classe com nome de function - não usar!

FUNÇÃO CLOSURE = contexto léxico de uma função, escopo

FUNCTION FACTORY/FUNÇÃO FÁBRICA = ao ser executada devolve um objeto

function Nome(a,b):
    return {
        nome: a,
        preco: b
    }

****************************************************************************************************************************************

ORIENTAÇÃO A OBJETOS 

****************************************************************************************************************************************


Criando classes = class Name {}

Atributos = método construtor = constructor(atributo1, atributo2)





